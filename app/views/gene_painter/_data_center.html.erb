<div id='data_table'>
  <table id='one-column-emphasis'>
    <thead>
      <tr>
        <th scope='col'>Analyze</th>
        <th scope='col'>View</th>
        <th scope='col'>Sequence Name</th>
        <th scope='col'>Gene Structure</th>
        <th scope='col'>Generate Gene Structure</th>
        <th scope='col' style='width: 35%;'>Species</th>
      </tr>
    </thead>
    <tbody>
    </tbody>
  </table>
</div>

<%=
  content_tag(:div,
    check_box_tag('select_all') +
    content_tag(:span, 'Select All', :style => 'padding-left: 5px; padding-right: 20px') +
    check_box_tag('deselect_all') +
    content_tag(:span, 'Deselect All', :style => 'padding-left: 5px; padding-right: 20px'),
    :id => 'options',
    :style => 'padding: 10px; padding-top: 20px;')
%>

<%= javascript_tag defer: 'defer' do -%>
  var $selectAll = $('input#select_all'),
    $deselectAll = $('input#deselect_all');

  $deselectAll.change(function() {
    var analyzeCheckBoxes = $('div#data_table').find('input#analyze'),
      viewCheckBoxes = $('div#data_table').find('input#view');

    checkAll($.merge(analyzeCheckBoxes, viewCheckBoxes), false);
  });

  $selectAll.change(function() {
    var analyzeCheckBoxes = $('div#data_table').find('input#analyze'),
      viewCheckBoxes = $('div#data_table').find('input#view');

    checkAll($.merge(analyzeCheckBoxes, _.first(viewCheckBoxes, 20)), true);
  });

<% end -%>

<%=
  content_tag(:div,
    content_tag(:button, 'Submit', :id => 'btnSubmit') +
    content_tag(:p, '<b>Press submit when finished with data selection.</b>'.html_safe),
  )
%>

<div id="dialog-message" title="Error" style="display: none">
  <p>
    Please upload or select to generate gene structures before submitting.
  </p>
</div>

<%= javascript_tag defer: 'defer' do -%>
  var $btnSubmit = $('button#btnSubmit');

  function showErrorModal() {
    $( "#dialog-message" ).dialog({
      modal: true,
      buttons: {
        Ok: function() {
          $( this ).dialog( "close" );
        }
      }
    });
  }

  $btnSubmit.click(function() {
    var missingGeneStructures = [];
    var boxes = $('div#data_table').find('input#generateGeneStructure');

    for (var i = 0; i < boxes.length; i++) {
      if ( $(boxes[i]).is(':checked') ) {
        missingGeneStructures.push(boxes[i].value);
      }
    }

    /** Returns genes that are checked to
     * view in the graphical representation tab.
     *
     * This calls use underscorejs' filter() method to
     * get all inputs that are checked, then pipe
     * them to the map() method to extract the data
     * attributes.
     */
    var selected_genes = _.filter($('div#data_table').find('input#view'), function(item) {
        return $(item).is(':checked');
      }).map(function(item) {
          return $(item).attr('data');
        });

    if (missingGeneStructures.length == 0 && $('span#uploaded_gene_structures').html() == 'No files uploaded') {
      showErrorModal();
    } else {

      $.ajax({
        type: 'POST',
        url: '/create_gene_structures',
        data: {'data': missingGeneStructures, 'genes': selected_genes},
        dataType: 'script'
      });

      hide_show_waiting('show');
    }
  });
<% end -%>
