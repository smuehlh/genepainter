<div id='text-based'>
  <div id='left-column'>
    <div id='all-left'>
    </div>
    <div id='merged'>
      <table>
        <tr>
          <td>>Merged</td>
        </tr>
      </table>
    </div>
  </div>

  <div id='right-column'>
    <div id='all-right' style='padding-left: 10px'>

    </div>
    <div id='merged' style='overflow: hidden; padding-left: 10px'>
      <table id='merged'>

      </table>
    </div>
  </div>


  <%= javascript_tag defer: 'defer' do -%>

    // simultaneously scroll up/down, left/right

    $('div#all-right').on('scroll', function() {
      $('div#all-left').scrollTop($(this).scrollTop());
      $('div#merged').scrollLeft($(this).scrollLeft());
    });

    $('div#all-left').on('scroll', function() {
      $('div#all-right').scrollTop($(this).scrollTop());
    });




     /* function colorLastRow(colors) {
       var numberOfCells = $($('div#text-based').find('tr')[0]).children().length;
       var tmpElement = '<tr id="lastRow">';

       for (var i = 0; i < numberOfCells; i++) {
         if (i > 0) {
           // build css color, e.g.: rgb(255, 255, 255);
           var rgbVal;
           if (colors[i-1].red == 0 && colors[i-1].green == 51 && colors[i-1].blue == 255) {
             rgbVal = 'rgb(255, 255, 255)';
           } else {
             rgbVal = 'rgb(' + colors[i-1].red + ', ' + colors[i-1].green + ', ' + colors[i-1].blue + ')';
           }

           tmpElement += '<td style="background-color: ' + rgbVal + '">&nbsp;</td>';
         } else {
           tmpElement += '<td>&nbsp;Merged</td>';
         }
       }

      tmpElement += '</tr>';
      $($('div#text-based').find('tbody')[0]).append(tmpElement);
    }  */




   <% end -%>
</div>

<h4>View Options</h4>
<table>
  <tr>
    <td>
      <%=
        content_tag(:div,
          check_box_tag('highlight_unique') +
          content_tag(:span, 'Highlight unique introns', :style => 'padding-left: 5px; padding-right: 20px')
          )
      %>

      <%=
        content_tag(:div,
          check_box_tag('highlight_common') +
          content_tag(:span, 'Highlight introns with at least ', :style => 'padding-left: 5px;') +
          '<input id="spinner" name="value" style="width: 25px;">'.html_safe + ' % in common.'
          )
      %>

      <%= javascript_tag defer: 'defer' do -%>
        var spinner = $('#spinner');

        $(function() {
          spinner.spinner({
            spin: function( event, ui ) {
              // Remove disabled attribute if applicable
              $('input#highlight_common').removeAttr('disabled');

              if ( ui.value > 100 ) {
                $( this ).spinner( 'value',  1);
                return false;
              } else if ( ui.value < 1 ) {
                $( this ).spinner( 'value', 100 );
                return false;
              }
            }
          });

          // Set spinner default value
          spinner.spinner( 'value', 1 );
        });

        spinner.on('input', function() {
          if ( isNaN( parseInt(this.value) ) ) {
            $('input#highlight_common').prop('disabled', true);
          } else if ( parseInt(this.value) > 100 || parseInt(this.value) < 1 ) {
            $('input#highlight_common').prop('disabled', true);
          } else {
            $('input#highlight_common').removeAttr('disabled');
          }
        });

      <% end -%>
    </td>
    <td style='padding-left: 30px;'>
      <%=
        content_tag(:div,
          check_box_tag('show_intron_phase') +
          content_tag(:span, 'Show intron phase', :style => 'padding-left: 5px; padding-right: 20px')
          )
      %>
    </td>
  <tr>
</table>
