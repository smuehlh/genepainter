<% if File.exist?("#{Rails.root}/public/tmp/#{controller.id}-taxonomy-intron-numbers.txt") &&
      File.exist?("#{Rails.root}/public/tmp/#{controller.id}-tree.svg") then %>

  <%
    taxa_with_gained_introns, taxa_with_all_introns = get_phylotree_intronpos_info(
      "#{Rails.root}/public/tmp/#{controller.id}-taxonomy-intron-numbers.txt"
    ) 
  %>

  <%= render :partial => "gene_painter/help/phylotree_info" %>
  <%=
    content_tag(:div, 
      render_svg("#{controller.id}-tree.svg", "svg"), 
      :id => "svg_placeholder", 
      :style => "padding: 10px 0px 10px 0px"
    ) +
    content_tag(:h4, "Legend") +
    content_tag(:div, render_tree_legend) +
    content_tag(:h4, "View Options") +

    content_tag(:table, :class => "unstyled") do
      content_tag(:tr) do
        content_tag(:td,
          radio_button_tag(:phylo, "all", :checked => true) +
          label_tag("phylo_all", "Highlight all introns", :style => "padding-left: 5px; padding-right: 20px")
        ) +
        content_tag(:td,
          radio_button_tag(:phylo, "gained") +
          label_tag("phylo_gained", "Highlight gained introns", :style => "padding-left: 5px; padding-right: 20px")
        )
      end
    end +

    content_tag(:p, 
      "Click on taxa to highlight introns in text-based and graphical representation.", :class => "filename"
    )
  %>    

  <script>
      // Display phylotree
      // classes on taxa:
      // 'taxon' - each taxon has. use when 'all' is selected
      // 'taxon-intron-gain' - only some taxa have. use when 'gained' is selected

      // add tooltip (title) to taxon-elements
      $(".taxon").attr("title", "Highlight introns in text-based and graphical representation.");

      // function colorize(cells) {
      //   _.each(cells, function(cell) {
      //     $(cell).addClass('highlighted');
      //   });
      // }

      // function resetPhylotree() {
      //   // apparently, jquery-ui broke removeClass, so use this instead
      //   // TODO - do not override all classes, there might be also class 'taxon-intron-gain'
      //   $(".taxon-highlight").attr("class", "taxon");
      // }
    
      // // onclick of taxon
      // $(".taxon").click(function() {

      // });

      // $('.taxon').click(function() {
      //   $("#phylo_tree_info").show(); // show info box

      //   // link to text-based rep.
      //   // un-check checkboxes with highlighting-options in text-based representation (and have the events of un-checking triggered)
      //   $('.checkbox-textbased-highlight').prop('checked', true).trigger('click');

      //   resetPhylotree();
      //   resetTable();

      //   this.setAttribute('class', 'taxon taxon-highlight'); // taxon-highlight CSS for styling 

      //   var textTokens = this.innerHTML.split(" ");

      //   if (textTokens.length > 1) {
      //     textTokens.pop();
      //     textTokens.pop();
      //     textTokens.pop();
      //   }

      //   var nodeName = textTokens.toString().replace(/,/g, " ");
      //   var tmp = [];

      //   _.each(obj[nodeName], function(element) {
      //     colorize($("." + element));

      //     tmp.push(_.last(element.split("-")));
      //   });

      //   $('#genestructures-merged rect').removeClassSVG('fill-grey');

      //   if (tmp.length) {

      //     $('#genestructures-merged .background').addClassSVG('fill-grey');

      //     _.each($("#genestructures-merged rect"), function(rect) {

      //       if (!_.contains(tmp, rect.getAttribute('class').trim().split('_')[1])) {
      //         $(rect).addClassSVG('fill-grey');
      //       }
      //     });
      //   }

      // });
  </script>

<% else %>
	<%= content_tag(:i, 
		"Cannot display phylogenetic tree."
	)%>
<% end %>