<% provide(:title, 'Input Files') %>
<%= content_tag(:h1, "Input Files") %>
<%= content_tag(:h2, "Contents") %>

<a name="top" class="anker"></a>
<ul style="padding-left: 5%">
	<li><a class = "internal" href="#general">General</a></li>
	<li><a class = "internal" href="#msa">Multiple Protein Sequence Alignment</a></li>
	<li><a class = "internal" href="#gene_structures">Gene Structure Files</a></li>
	<li><a class = "internal" href="#mapping">Mapping Sequence Names to Species Names</a></li>
	<li><a class = "internal" href="#tree">Phylogenetic Tree Files</a></li>
</ul>

<h2>
	<table width=100% height>
		<tr>
			<td align="left"><a name="general" style="font-style: normal">General</a></td>
			<td align="right"><a class="internal" href="#" style="font-size: 12px">Back to top</a></td>
		</tr>
	</table>
</h2>
	<p>GenePainter requires two types of input:
	<ul style="padding-left: 5%">
		<li>A FASTA formatted multiple sequence alignment (MSA)</li>
		<li>A folder containing gene structures in YAML format as specified by WebScipio or in GFF v.3 format.</li>
	</ul>
	</p>
	<p>
	GenePainter combines information from the alignment with the gene structures. Therefore, the protein names from the MSA must match to the YAML or GFF filenames. Only those genes, which can be matched (i.e. protein name equals the YAML or GFF filename), will be analysed.
	</p>
	<p>
	If gene structure information shall be plotted onto phylogenetic trees, GenePainter also requires either:
	<ul style="padding-left: 5%">
		<li>NCBI taxonomy database dump</li>
		<li>User-provided text-file containing taxonomic lineages</li>
	</ul>
	</p>
<h2>
	<table width=100%>
		<tr>
			<td align="left"><a name="msa" style="font-style: normal">Multiple Protein Sequence Alignment</a></td>
			<td align="right"><a class="internal" href="#" style="font-size: 12px">Back to top</a></td>
		</tr>
	</table>
</h2>

	<p>This file must be a multiple protein sequence alignment, in which all sequences are of same length. Protein sequences are matched with the gene structures on the basis of the FASTA header and file names, respectively. To this end, the FASTA header must be exactly like the corresponding YAML or GFF filename for each gene, which should be included in the analysis. For this reason, FASTA headers must not contain any blanks or special characters.</p>

	
<h2>
	<table width=100%>
		<tr>
			<td align="left"><a name="gene_structures" style="font-style: normal">Gene Structure Files</a></td>
			<td align="right"><a class="internal" href="#" style="font-size: 12px">Back to top</a></td>
		</tr>
	</table>
</h2>
	<p>For the analysis, GenePainter needs gene structure information for each gene. This information must be stored either in the YAML format as generated by <a class="external" href="http://www.webscipio.org" style="font-size: 12px">WebScipio</a> or in GFF v.3 format. Moreover, all gene structures must be located in the same directory.</p>
	<h3>GFF</h3>
		<p>GFF3 formatted gene structures are parsed for &quot;CDS&quot; features. All &quot;CDS&quot; features are considered, which are linked via the attribute column (parent tag) to the first &quot;mRNA&quot; feature specified. If no mRNA feature is given in the GFF file, all CDS features are parsed. GenePainter uses column 1 (<span style="font-family: monospace">seqid</span>), columns 4 and 5 (<span style="font-family: monospace">start</span> and <span style="font-family: monospace">end of feature</span>) and column 8 (<span style="font-family: monospace">phase</span>). All other features and columns are ignored. GFF files generated by WebScipio can also be used as input, although they do not strictly follow GFF3 conventions.</p>

	<h3>YAML</h3>
		<p>The most convenient way to obtain YAML formatted files is to use the WebScipio web interface for gene reconstruction and to download the resulting YAML files. For automation of the YAML generation, several scriptable alternatives exist. First, WebScipio can be accessed by its web service API. This can be done within any software program. In the GenePainter package, scripts are included for querying WebScipio with genes belonging to a single species (
			<a class = "internal" href="#single_species"><span style="font-family: monospace">generate_yaml_for_species.rb</span></a>
		) or with genes belong to different species (
			<a class = "internal" href="#multi_species"><span style="font-family: monospace">generate_yaml_for_multiple_species.rb</span></a>
		). Both scripts access WebScipio through the web service and store the resulting YAML files locally. A brief introduction to the usage of the web service can be found at the <a class="external" href="http://www.webscipio.org/webscipio/web_service" style="font-size: 12px">WebScipio homepage</a>. Second, Scipio can be used locally, which requires further software (BLAT, Bioperl, YAML Perl module) and respective genome assembly files.</p>

		<p>A list of all species available can be found at <a class="external" href="http://www.webscipio.org/webscipio/genome_list" style="font-size: 12px">http://www.webscipio.org/webscipio/genome_list</a>.</p>

		<h4>
			<a name="single_species" style="font-style: normal">
				Usage of <span style="font-family: monospace">generate_yaml_for_species.rb</span>
			</a>
		</h4>
			<p><span style="font-family: monospace">$ ruby tools/ generate_yaml_for_species.rb -s &lsquo;Species name&rsquo; -i fasta_sequence.fas</span></p>

			<p><b>Mandatory Arguments</b><p>

			<table>
				<colgroup>
					<col style="width:240px">
				</colgroup> 
<!-- 				<tr>
					<th>Option</th>
					<th>Short option</th>
					<th>Description</th>
				</tr> -->
				<tr>
					<td><span style="font-family: monospace">-s </span><i> or </i><span style="font-family: monospace"> --species <i>&lt;&lsquo;species_name&lsquo;&gt;</i></span></td>
					<td>Species encoding the specified protein(s). Species should be wrapped with &quot;&lsquo;&quot; to preserve spaces.<td>
				</tr>
				<tr>
					<td>
						<span style="font-family: monospace">-i </span><i> or </i><span style="font-family: monospace"> --input <i>&lt;file&gt;</i></span>
					</td>
					<td>Path to fasta formatted protein sequence(s). Might be a multiple sequence alignment of sequences encoded by same species.</td>
				</tr>
				<tr>
			</table>
			
			<p><b>Optional Arguments</b><p>

			<table>
				<colgroup>
					<col style="width:240px">
				</colgroup> 
<!-- 				<tr>
					<th>Option</th>
					<th>Short option</th>
					<th>Description</th>
				</tr> -->
				<tr>
					<td><span style="font-family: monospace">-o </span><i> or </i><span style="font-family: monospace"> --outfile <i>&lt;file_name&gt;</i></span></td>
					<td>Name of the YAML output file. ONLY used if the fasta file contains only one sequence. Default: Use fasta header of the input protein sequence.<td>
				</tr>
				<tr>
					<td><span style="font-family: monospace">-h </span><i> or </i><span style="font-family: monospace"> --help</span></td>
					<td>Show help message.</td>
				</tr>
				<tr>
			</table>

		<h4>
			<a name="multi_species" style="font-style: normal">
				Usage of <span style="font-family: monospace">generate_yaml_for_multiple_species.rb</span>
			</a>
		</h4>
			<p><span style="font-family: monospace">$ ruby tools/ generate_yaml_for_multiple_species.rb -s example/fastaheaders2species.txt -i fasta_sequence.fas</span></p>
			<p><b>Mandatory Arguments</b><p>
			<table>
				<colgroup>
					<col style="width:240px">
				</colgroup> 
<!-- 				<tr>
					<th>Option</th>
					<th>Short option</th>
					<th>Description</th>
				</tr> -->
				<tr>
					<td>
						<span style="font-family: monospace">-s </span><i> or </i>
						<span style="font-family: monospace"> --species-to-fasta <i>&lt;file&gt;</i></span>
					</td>
					<td>Text based file mapping fasta header to species names. Mandatory line format:<br /> Fastaheader1[,Fastaheader2]:Species<td>
				</tr>
				<tr>
					<td>
						<span style="font-family: monospace">-i </span><i> or </i><span style="font-family: monospace">--input <i>&lt;file&gt;</i></span>
					</td>
					<td>Path to fasta formatted multiple sequence alignment.</td>
				</tr>
				<tr>
			</table>
	
			<p><b>Optional Arguments</b><p>

			<table>
				<colgroup>
					<col style="width:240px">
				</colgroup> 
<!-- 				<tr>
					<th>Option</th>
					<th>Short option</th>
					<th>Description</th>
				</tr> -->
				<tr>
					<td>
						<span style="font-family: monospace">-h </span><i> or </i><span style="font-family: monospace"> --help</span>
					</td>
					<td>Show help message.</td>
				</tr>
				<tr>
			</table>

			<p>YAML files will be named like the corresponding fasta headers. YAMLs are only generated for those sequences, for which a species is specified.</p>


		<h4>Structure of YAML files</h4>
			<p>Scipio and WebScipio store gene structure information in YAML format. This format comprises a collection of key â€“ value pairs, an associative array. However, the accurate gene structure representation requires more keys than necessary for the alignment of the gene structures. Thus, GenePainter ignores some data included in the YAML files. Accordingly, these additional keys need not be included in manually reconstructed YAML files. A minimal working example YAML file is defined in Figure 1. An exhaustive description of all keys used by WebScipio can be found at the WebScipio homepage <a class="external" href="http://www.webscipio.org/webscipio/web_service" style="font-size: 12px">http://www.webscipio.org/help/scipio#description</a>.</p>

			
			<%= image_tag("help/input_fig1.png", :alt=>"input 1", :class => "img_help") +
				tag(:br, :class => "clearfix")
			%>
		
			<p style="font-size: 10px"><b>Figure 1</b> Excerpt from the YAML file describing HsCoro1A. All exon and intron descriptions but the very first and last ones have been omitted (marked in yellow). Blank lines were added to separate exon and intron descriptions. Additionally, green boxes highlight exons and blue boxes highlight introns. Only those key â€“ value pairs, which are relevant for GenePainter are shown. The original YAML file is part of the test data included in the package.</p>
		
			<p>The list of exons and introns (&quot;matchings&quot;) must start with the keyword 
<span style="font-family: monospace">- matchings:</span>. The order of keys describing the exons and introns is not important. Mandatory keys for successful incorporation in GenePainter are listed in the following tables:</p>


			<table>
				<colgroup>
					<col style="width:240px">
				</colgroup> 
				<tr>
					<th>YAML keys</th>
					<th>Description</th>
				</tr>
					<td>type</td>
					<td>&quot;intron&quot;, &quot;intron?&quot;, &quot;exon&quot;, or &quot;gap&quot;. &quot;intron?&quot; is used for uncertain introns (unusual splice patterns found)</td>
				</tr>
				<tr>
					<td>nucl_start</td>
					<td>Location in the query (in nucleotide coordinates).</td>
				</tr>
				<tr>
					<td>seq</td>
					<td>DNA sequence of the feature.</td>
				</tr>
				<tr>
					<td>nucl_end <i>(appears in exons only)</i></td>
					<td>Location in the query (in nucleotide coordinates).</td>
				</tr>				
			</table>
			<table>

<!-- 				<tr>
					<td>YAML keys that appear only in exons</td>
					<td>Description <i>appears only in exons</i></td>
				</tr> -->
<!-- 				<tr>
					<td>nucl_end <i>(appears only in exons description)</i></td>
					<td>Location in the query (in nucleotide coordinates).</td>
				</tr> -->
			</table>

<h2>
	<table width=100%>
		<tr>
			<td align="left"><a name="mapping" style="font-style: normal">Mapping Sequence Names to Species Names</a></td>
			<td align="right"><a class="internal" href="#" style="font-size: 12px">Back to top</a></td>
		</tr>
	</table>
</h2>			
		<p>Only protein/gene sequence names that are linked to species names are considered for taxonomic computations or generation of YAML files, respectively. All other genes are omitted from these computations. Species names must match NCBI taxonomy, if YAML files are obtained via WebScipio and if the NCBI taxonomy tree is used for intron gain and loss plotting. The file containing the mapping of fasta headers and species names must be in a specific format (Figure 2): Only one species name per line. Gene and species names are separated by &quot;:&quot;. If several genes correlate to the same species, their fasta headers might be given in one line. The list of fasta headers needs to be comma-separated or semicolon-separated . The species name must be enclosed by double quotes. Blanks immediately before and after &quot;;&quot; are permitted, and will be ignored by the program.</p>
				
				
		<%= image_tag("help/input_fig2.png", :alt=>"input 2", :class => "img_help") +
			tag(:br, :class => "clearfix")
		 %>
		
		<p style="font-size: 10px"><b>Figure 2</b> For taxonomy options as well as to generate YAML files, a mapping between genes described in MSA and corresponding species must be established. To this end, fasta headers (separated by &quot;,&quot;) are mapped to species names. Fasta headers and species names are separated by &quot;:&quot;.</p>

<h2>
	<table width=100%>
		<tr>
			<td align="left"><a name="tree" style="font-style: normal">Phylogenetic Tree Files</a></td>
			<td align="right"><a class="internal" href="#" style="font-size: 12px">Back to top</a></td>
		</tr>
	</table>
</h2>
	<p>
	To map intron gain and loss events onto phylogenetic trees, GenePainter needs to correlate the protein sequence/gene structure names and the species names as present in the NCBI taxonomy database or the user-provided list.<br />
	
	GenePainter can extract the taxonomic lineages from the NCBI taxonomy database dump, which can be obtained using the script <span style="font-family: monospace">download_taxdump.rb</span>, or from a user-provided text-file containing taxonomic lineages (Figure 3). In this file, one lineage should be given per line. Taxa should be ordered from root to species and be separated from each other by semicolons. Optionally, a blank may follow the semicolon.<br />
 
	</p>
	
	<%= image_tag("help/input_fig3.png", :alt=>"input 3", :class => "img_help") +
		tag(:br, :class => "clearfix")
	%>
		
	<p style="font-size: 10px"><b>Figure 3</b> Excerpt of file providing a user-defined taxonomic lineage. For displaying purpose, parts of the lineage were omitted.</p>
	

<%= javascript_tag defer: 'defer' do -%>
	<!-- show all help-partials included _above_ that have the class 'help' -->
	$("div#content").find(".help").show().removeClass()
<% end -%>