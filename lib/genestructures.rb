# this method parses a gene structure file and returns status of gene prediction (only if done with webscipio)
# @path [String] path to gene structure file
# returns [String] status or "missing" if file does not exist
def get_status_of_gene_structure(path)

	if ! FileTest.file?(path) then 
		# gene structure is missing
		return "missing"
	else
		status = "unknown" # default status
		if File.extname(path) == ".yaml" then 
			# file was generated by Scipio, try to inferr prediction status
			IO.foreach(path) do |line|
				line = line.chomp
				if match_data = line.match(/status: ([\w]+)/) then
					# don't allow arbitrary status messages
					if match_data[1] == "complete" || match_data[1] == "incomplete" || match_data[1] == "partial" then
						status = match_data[1]
					end
					break
				end
			end
		else
			# file not generated by Scipio, just stick with default status
		end
		return status
	end
end

# this method generated gene structures for _all_ genes specified in species_to_fasta file
# @path_to_species_to_fasta [String] Path to file which maps species to gene names (fasta headers); for each gene listed a gene structure will be generated
# @path_to_fasta [String] Path to fasta formatted file (can contain more sequences than listed in path_to_species_to_fasta)
# @output_path [String] Path to location, where generated gene structures should be stored
# returns [Boolean] successfull call of script that generates all gene structures at once (thats unrelated to the status of individual gene structures)
def generate_gene_structures( path_to_species_to_fasta, path_to_fasta, output_path)

	species2genes = TaxonomyToGene.map_genenames_to_speciesnames(path_to_linked_list, genes_with_data)

	path_to_genepainter = "/fab8/server/db_scripts/gene_painter_new/gene_painter" # FIXME adjust path to genepainter standalone, best createa an constant with switch for fab8/cymo server
	path_to_yaml_genenerator = File.join( path_to_genepainter, "tools", "generate_yaml_for_multiple_species.rb" )

	is_success = system("ruby #{path_to_yaml_genenerator} -s #{path_to_species_to_fasta} -i #{path_to_fasta}")

	return is_success
end
